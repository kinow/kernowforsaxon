package net.sf.kernow.ui;

import java.net.URISyntaxException;
import java.util.Properties;
import javax.swing.JTabbedPane;
import javax.swing.SwingWorker;
import javax.xml.transform.Source;
import net.sf.kernow.ui.util.ComboBoxUtil;
import net.sf.kernow.ui.util.DisablingToggleButtonController;
import net.sf.kernow.ui.util.FileComboController;
import net.sf.kernow.util.FileUtil;
import net.sf.saxon.s9api.Serializer;


public class TabSchematron extends javax.swing.JPanel implements Tab {
    
    private TabbedView view;
        
    private FileComboController schema;
    private FileComboController stylesheet;
    private FileComboController compiledSchema;
    private FileComboController xmlInput;
    private FileComboController output;
    private DisablingToggleButtonController disablingOutput;
    
    private final int splitPanePos = 260;
    
    /**
     * Creates new form TabSchematron.
     */
    public TabSchematron(TabbedView view) {
        this.view = view;
        initComponents();
        
        this.schema = new FileComboController(schemaCmbBx, schemaBtn, false);
        this.stylesheet = new FileComboController(stylesheetCmbBx, stylesheetBtn, false);
        this.compiledSchema = new FileComboController(compiledSchemaCbmBx, compiledSchemaBtn, false);
        this.xmlInput = new FileComboController(xmlInputCmbBx, xmlInputBtn, false);
        this.output = new FileComboController(outputCmbBx, outputBtn, false);
        
        disablingOutput = new DisablingToggleButtonController(sendToFileChkBx);
        disablingOutput.add(outputCmbBx);
        disablingOutput.add(outputBtn);
        disablingOutput.add(outputLbl);        
    }

    @Override
    public void loadProperties(Properties props) {
        schema.loadValues(props, "schematronSchemaCmbBx");
        stylesheet.loadValues(props, "schematronStylesheetCmbBx");
        compiledSchema.loadValues(props, "schematronCompiledSchemaCmbBx");
        xmlInput.loadValues(props, "schematronXMLInputCmbBx");
        sendToFileChkBx.setSelected(Boolean.parseBoolean(props.getProperty("schematronSendOutputToFileChkBox", "false")));
        output.loadValues(props, "schematronOutputFileCmbBx");
    }

    @Override
    public void saveProperties(Properties props) {
        schema.saveValues(props, "schematronSchemaCmbBx");
        stylesheet.saveValues(props, "schematronStylesheetCmbBx");
        compiledSchema.saveValues(props, "schematronCompiledSchemaCmbBx");
        xmlInput.saveValues(props, "schematronXMLInputCmbBx");
        props.setProperty("schematronSendOutputToFileChkBox", Boolean.toString(sendToFileChkBx.isSelected()));
        output.saveValues(props, "schematronOutputFileCmbBx");
    }

    public void setRunButtonsEnabled(boolean enable) {
        
        runBtn.setEnabled(enable);
        
        schemaBtn.setEnabled(enable);
        stylesheetBtn.setEnabled(enable);
        compiledSchemaBtn.setEnabled(enable);
        xmlInputBtn.setEnabled(enable);
        
        if (sendToFileChkBx.isSelected()) {
            outputBtn.setEnabled(enable);
        }
    }

    public void setAllCaretPositions() {
        ComboBoxUtil.setCaretPosition(schemaCmbBx);
        ComboBoxUtil.setCaretPosition(stylesheetCmbBx);
        ComboBoxUtil.setCaretPosition(compiledSchemaCbmBx);
        ComboBoxUtil.setCaretPosition(xmlInputCmbBx);
        ComboBoxUtil.setCaretPosition(outputCmbBx);
    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        schemaCmbBx = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        stylesheetCmbBx = new javax.swing.JComboBox();
        stylesheetBtn = new javax.swing.JButton();
        schemaBtn = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        compiledSchemaCbmBx = new javax.swing.JComboBox();
        compiledSchemaBtn = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        xmlInputCmbBx = new javax.swing.JComboBox();
        xmlInputBtn = new javax.swing.JButton();
        sendToFileChkBx = new javax.swing.JCheckBox();
        outputLbl = new javax.swing.JLabel();
        outputCmbBx = new javax.swing.JComboBox();
        outputBtn = new javax.swing.JButton();
        runBtn = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12));
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("net/sf/kernow/i18n/SchematronTab"); // NOI18N
        jLabel1.setText(bundle.getString("Schematron_Validation")); // NOI18N

        jLabel2.setText(bundle.getString("Schema")); // NOI18N

        schemaCmbBx.setEditable(true);

        jLabel3.setText(bundle.getString("Compilation_Stylesheet")); // NOI18N

        stylesheetCmbBx.setEditable(true);

        stylesheetBtn.setText("...");

        schemaBtn.setText("...");

        jLabel4.setText(bundle.getString("Compiled_Schema")); // NOI18N

        compiledSchemaCbmBx.setEditable(true);

        compiledSchemaBtn.setText("...");

        jLabel5.setText(bundle.getString("XML_Input")); // NOI18N

        xmlInputCmbBx.setEditable(true);

        xmlInputBtn.setText("...");

        sendToFileChkBx.setText(bundle.getString("Send_output_to_file")); // NOI18N
        sendToFileChkBx.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        sendToFileChkBx.setMargin(new java.awt.Insets(0, 0, 0, 0));

        outputLbl.setText(bundle.getString("Output_File")); // NOI18N

        outputCmbBx.setEditable(true);

        outputBtn.setText("...");

        runBtn.setText(bundle.getString("Run")); // NOI18N
        runBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 318, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(outputLbl))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(schemaCmbBx, 0, 322, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(schemaBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(stylesheetCmbBx, 0, 322, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(stylesheetBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(compiledSchemaCbmBx, 0, 322, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(compiledSchemaBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(xmlInputCmbBx, 0, 322, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(xmlInputBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(outputCmbBx, 0, 322, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(outputBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(sendToFileChkBx)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 301, Short.MAX_VALUE)
                        .addComponent(runBtn)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(schemaBtn)
                    .addComponent(schemaCmbBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(stylesheetCmbBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stylesheetBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(compiledSchemaCbmBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(compiledSchemaBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(xmlInputCmbBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(xmlInputBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(outputLbl)
                    .addComponent(outputCmbBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(outputBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sendToFileChkBx)
                    .addComponent(runBtn))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void runBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runBtnActionPerformed
        final SwingWorker worker = new SwingWorker() {
            @Override
            public Object doInBackground() {
                
                view.startIndeterminant(java.util.ResourceBundle.getBundle("net/sf/kernow/i18n/TabbedView").getString("Working..."));
                
                boolean success = false;

                // Compilation time
                try {
                    Source input  = FileUtil.createSource(ComboBoxUtil.getComboBoxValue(schemaCmbBx));
                    Source style  = FileUtil.createSource(ComboBoxUtil.getComboBoxValue(stylesheetCmbBx));
                    Serializer serializer = FileUtil.createDestination(ComboBoxUtil.getComboBoxValue(compiledSchemaCbmBx));
                    success = view.getTransformController().runSingleFileTransform(input, style, serializer);
                // TODO: Better error reporting! -fg
                } catch (URISyntaxException e) {
                    System.out.println(e.toString());
                }

                if (success) {
                    // Run time
                    try {
                        Source input  = FileUtil.createSource(ComboBoxUtil.getComboBoxValue(xmlInputCmbBx));
                        Source style  = FileUtil.createSource(ComboBoxUtil.getComboBoxValue(compiledSchemaCbmBx));

                        Serializer serializer;
                        if (sendToFileChkBx.isSelected()) {
                            serializer = FileUtil.createDestination(ComboBoxUtil.getComboBoxValue(compiledSchemaCbmBx));
                        } else {
                            serializer = new Serializer();
                            serializer.setOutputStream(System.out);
                        }

                        success = view.getTransformController().runSingleFileTransform(input, style, serializer);
                    // TODO: Better error reporting! -fg
                    } catch (URISyntaxException e) {
                        System.out.println(e.toString());
                    }
                }

                view.endIndeterminant(success);
                
                return "Schematron Validation Finished";
            }
        };
        
        view.executeService(worker);
}//GEN-LAST:event_runBtnActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton compiledSchemaBtn;
    private javax.swing.JComboBox compiledSchemaCbmBx;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton outputBtn;
    private javax.swing.JComboBox outputCmbBx;
    private javax.swing.JLabel outputLbl;
    private javax.swing.JButton runBtn;
    private javax.swing.JButton schemaBtn;
    private javax.swing.JComboBox schemaCmbBx;
    private javax.swing.JCheckBox sendToFileChkBx;
    private javax.swing.JButton stylesheetBtn;
    private javax.swing.JComboBox stylesheetCmbBx;
    private javax.swing.JButton xmlInputBtn;
    private javax.swing.JComboBox xmlInputCmbBx;
    // End of variables declaration//GEN-END:variables

    public int getSplitPanePos() {
        return splitPanePos;
    }

    @Override
    public void init(TabbedView view) {
        this.view = view;
    }

    @Override
    public void insertInto(JTabbedPane pane, int pos) {        
        String name = java.util.ResourceBundle.getBundle("net/sf/kernow/i18n/SchematronTab").getString("Schematron");
        String tooltip = java.util.ResourceBundle.getBundle("net/sf/kernow/i18n/SchematronTab").getString("Run_Schematron_validation");
        pane.insertTab(name, null, this, tooltip, pos);
    }
    
}
